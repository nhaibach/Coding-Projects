####Abbeville WQ Data 2024##############
##Nicole Haibach 6/27/24
##Create graphs with DO and whether plant is operating or not

####Libraries needed###

library(readxl)
library(dplyr)
library(lubridate)
library(ggplot2)

####Upload Data files and create necessary columns#####

MOD <- read_excel("J:/4807/005/Docs/Water Quality Study/Ops Data/MasterOperationData.xlsx")

##Change start time column to actual time and add EndTime
MOD <- MOD %>%
  mutate(
    StartTime = ifelse(StartTime == "0", NA, StartTime),
    StartTime = as.POSIXct(paste(Date, StartTime), format="%Y-%m-%d %I%p", tz="UTC"),
    EndTime = ifelse(!is.na(StartTime), as.POSIXct(StartTime) + hours(HoursRan), NA)
  )
MOD$EndTime <- as.POSIXct(MOD$EndTime, origin = "1970-01-01", tz = "UTC")


Sonde <- read_excel("J:/4807/005/Docs/Water Quality Study/TR Continuous Data/TRSonde_Master.xlsx")
Sonde$...10 <- NULL
summary(Sonde)


##################Create Column for Operating or not Operating##############

# Create a new column in Sonde
Sonde$in_interval <- 0

# Loop through each row in Sonde
for (i in 1:nrow(Sonde)) {
  date_time <- Sonde$DateTime[i]
  Sonde$in_interval[i] <- ifelse(any(date_time >= MOD$StartTime & date_time <= MOD$EndTime), 1, 0)
}
Sonde <- Sonde %>%
  mutate(in_interval = ifelse(is.na(in_interval), 0, in_interval))

################Graphs#########################
# Create plot of DO vs time
ggplot(Sonde, aes(x = DateTime, y = `ODO mg/L`)) +
  geom_line(color = "blue") +    # Line plot for ODO mg/L
  geom_hline(yintercept = 4, color = "red", linetype = "solid", size = 1) +  # Red line at 4
  labs(
    title = "Dissolved Oxygen Over Time",
    x = "Date",
    y = "DO (mg/L)"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels



# Normalize the in_interval data for plotting
Sonde <- Sonde %>%
  mutate(in_interval_scaled = in_interval * max(`ODO mg/L`) / max(in_interval, na.rm = TRUE))

# Plot with Operation Data
ggplot(Sonde, aes(x = DateTime)) +
  geom_line(aes(y = `ODO mg/L`, color = 'DO Hourly'), size = .5) +    # Line plot for ODO mg/L
  geom_line(aes(y = in_interval_scaled, color = 'Operation'), size = .5) +  # Line plot for scaled in_interval
  geom_hline(aes(yintercept = 4, color = 'Min DO Standard'), linetype = "solid", size = .5) +  # Red line at 4
  labs(
    title = "Rocky River Dam Tailrace",
    x = "Date",
    y = "DO (mg/L)",
    color = "Legend"
  ) +
  scale_x_datetime(date_labels = "%d-%b", date_breaks = "1 day") +
  scale_color_manual(values = c('DO Hourly' = "blue", 'Operation' = "green", 'Min DO Standard' = "red")) +
  theme_bw() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "right"
  )
